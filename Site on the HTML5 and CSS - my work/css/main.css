* {
    box-sizing: border-box; /* т.е. этот параметр применяется ко всем стилям и ширина всегда будет такой, какой вы её указали */
}

body {
    margin: 0; /* внешний отступ вокруг тега body */
    font-family: 'Montserrat', sans-serif; /* семейство шрифта будет: монсерат, sans-serif - прямой шрифт без засечек, это значит если данный файл не загрузится, то будет юзаться любой другой шрифт прямой без засечек, который установлен у пользователя на компьютере*/
}

/* padding - внутренний отступ
   margin  - внешний отступ
   
   Ctrl + Shift + f4 - убрать/показать разметку/сетку в фигме(направляющие) 
   
   кликаем на заголовок, зажимаем Alt и наводим вверх - показывает расстояние в цифрах от контента выше*/

.container {
    max-width: 1110px;
    margin-left: auto; /* это значения автоматического выравнивания слева и справа, они работают для блочной модели
    по умолчанию элемент отображается как блок на странице и данные св-ва выравнивают его по центру - горизонтально
    это относится к блочной модели*/
    margin-right: auto;
}

.none {
    display: none !important; /* этим параметром мы скрыли шапку сайта, html видит, что этот параметр важнее остальных и его нельзя переопределять*/
}

/* Header */

.header {
    position: relative; /*говорит о том, что этот  div с классом header является родителем для элементов, которые лежат внутри него и у которых есть position: absolute */

    /* Определяем модель flex-box для блока .header */
    display: flex; /* наш блок будет явл-ся контейнером и эл-ты внутри него будут выстраиваться по правилам flexbox модели(по ум-ю все эл-ы выстраиваются в ряд) */

    flex-direction: column; /* Выстраиваем flex-элементы в колонку, основная ось - Y */

    /* если хотим выровнить в колонку(по ум-ю идет выравнивание в ряд)*/
    /* вышестоящее правило указывает основную ось(в данном случае ось y)*/
    /* чтобы выравнять контент по оси - используется: */

    justify-content: center; /* Выравнивание по основной оси*/

    /* теперь x поперечная ось и чтобы выровнять по поперечной оси - используется: */
    
    align-items: center; /* Выравнивние по поперечной оси */
    

    width: 100%;
    height: 100vh;

    
    background-color: #556983; /* хекс код */
    background-image: url("./../img/header/header-bg.jpg"); /* .. - выход на уровень выше*/
    background-size: cover; 
    background-position: center;
}

.header-title {
    margin: 0;
    margin-bottom: 25px;
    font-weight: 700;
    font-size: 56px;
    line-height: 1.3; /* 1.3 = 130% | высота строки | 56 * 1.3 = 72.8px */ 
    text-align: center;
    color: rgb(255, 255, 255);
}

.header-subtitle {
    margin: 0;
    font-weight: bold;
    font-size: 16px;
    line-height: 150%; /* or 24px*/
    text-align: center;
    letter-spacing: 0.2em; /* расстояние между буквами*/
    text-transform: uppercase; /* весь текст заглавными буквами*/
    color: rgb(255, 255, 255);
}

.header-arrow {
    width: 48px;
    height: 48px;
    /* background-color: rgba(255, 0, 0, 0.23); */
    position: absolute;
    bottom: 30px;
    left: 50%;
    /* margin-left: -24px; */
    transform: translate(-50%, 0);
}

/* Porfolio */

.portfolio {
    padding-top: 80px;
    padding-bottom: 115px;
}

.portfolio-header {
    margin: 0;
    margin-bottom: 70px;
    font-weight: 700;
    font-size: 46px;
    line-height: 130%;
    text-align: center;
    color: black;
}

.portfolio-cards-wrapper {
    display: flex; /* карточки выстроились в один ряд */
    flex-wrap: wrap;
    justify-content: space-between; /* св-во, которое выравнивает (по основной оси - это ряд - ось x) контент по краям контейнера, распределяя свободное пространство между ними(оно появляется) */
}

.card {
    margin-bottom: 30px;
    padding: 20px;
    max-width: 540px;
    background-color: white;
    /*540 - это подразумевается ширина контента внутри блока - и она не включает в себя внутренние отступы(padding'и) и не включает в себя рамку*/
    /* box-sizing: border-box; /* это нам говорит о том, что размер блока, который задан -  540px - включает в себя ВСЁ, включая рамку, т.е. от края рамки до края рамки*/
    box-shadow: 0px 10px 40px rgba(126, 155, 189, 1.35); 
    /* 
    аргумент, который мы сюда передаем(первое число) - отступ тени по оси x(горизонтальный отступ вправо) 
    второе число - указывает на отступ по оси y(т.е. это отступ вниз)
    третье чисо - радиус размытия тени 
    и далее идет цвет тени - первые 3 цифры это rgb(определяют сам цвет) 4-ый определяет его прозначность
    */
}

/* псевдо-селектор - потому что в html мы ничего не добавляем, но при этом этот селектор будет работать и он будет выбирать 2 последних элемента */

.card:last-child, .card:nth-last-child(2) {
    /*псведо-селектор, который выбирает эл-т по номеру с конца  (2-ой с конца)*/
    margin-bottom: 0;
}

.card-img {
    width: 500px;
    height: 286px;
    margin-bottom: 20px;
}

.card-title {
    margin: 0; /* m0 - сокращение для табуляции*/
    margin-bottom: 13px; /* mb13*/
    font-weight: 600;
    font-size: 24px;
    line-height: 130%;
    color: black;
}

.card p {
    margin: 0;
    font-size: 16px;
    line-height: 130%;
    color: black;
}

/* Footer */

.footer {
    padding-top: 45px;
    padding-bottom: 130px;
    background: #1E4776; /* это св-во используется для того, чтобы указать цвет фона и также указать цвет изображения*/
    color: white;
}

.footer-row {
    display: flex;
    flex-direction: row;
    justify-content: space-between; /* justify-content - Выранивание по основной оси, space-between - как эл-ты будут выравниваться , в нашем случае это дословно "пространство между" */
}

.footer-col {
    max-width: 350px;
    flex-grow: 1;
}

.footer-copyright {
    color: #7E9EC9;
    line-height: 1.3; /* рекомендуется всегда указывать line-height - в множителе , потому что данный множитель будет применяться к font-size того эл-та, к которому он применяется*/
}

.footer-copyright-name {
    font-weight: 700;
    font-size: 28px; /* т.е. исходя из коммента выше - тут будет 1.3 * 28px
    но если мы укажем 130 %, то это будет означать, что нужно взять font-size этого блока(footer-copyright) и его посчитать 130%, т.е. от 16(в данном сулчае от 28)  и это будет некорретно например там, где размер шрифта больше */
    margin-bottom: 15px;
}

.footer-copyright p {
    margin: 0;
    margin-bottom: 15px;
    font-size: 16px;
    font-weight: 600;
}

.footer-icons p {
    font-weight: 600;
    font-size: 16px;
    line-height: 1.3;
}

.footer-icons-row{ 
    display: flex;
    align-items: center; /* выравнивание по поперечной оси (по вертикали) */
    /* justify-content: space-between; */
}

/* выбираем все теги, которые находятся на первом уровне вложенности внутри блока с классом footer-icons-row 
    Знак > говорит нам о том, что мы обращаемся к эл-ту, который находится на первом уровне вложенности 
    т.е. внутри этого блока первый уровень - это ссылки href="#" 
    т.е. тег img уже лежит внутри ссылок и поэтому это не 1-ый уровень вложенности, а 2-ой , таким образом мы обратились ко всем эл-ам на первом уровне вложенности . т. е. это всё ссылки*/

    /* селектор + выбирает эл-т у которого есть сосед слева , т.е. как мы говорим - мы выбираем все эл-ты, кот находятся на 1-ом уровне вложенности - любые, в данном случае ссылки, а селектор + говорит, что мы выбираем соседа, который слева, от ссылки , которую мы выбрали */

.footer-icons-row > * + * { 
    margin-left: 30px; 
}

.footer-button {
    display: inline-block;
    height: 50px;
    padding-left: 30px;
    padding-right: 30px;

    border: 3px solid #ffffff;
    border-radius: 50px;

    color: white;
    line-height: 44px;
    font-weight: 700;
    font-size: 16px;
    text-transform: uppercase;
    text-decoration: none;
}

.footer-contacts p {
    margin: 15px 0; /* 15px - сверху снизу, 0 - слева справа */
    font-size: 16px;
    line-height: 1.3;
    color: #7E9EC9;
}